version: "3.8"

services:
  file_server:
    build:
        context: file_server/
    ports:
      - "1234"
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.25"
      replicas: 5
    volumes:
      - ./.fileserver/data:/tmp/

#   Add more container definitions below
  nginx_2:
    image: nginx:latest
    ports:
      - "8000:8000"
    volumes:
      - ./nginx_2.conf:/etc/nginx/nginx.conf
    depends_on:
      - file_server

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    depends_on:
      - file_server

  middleware:
    build:
      context: middleware/
    ports:
      - "8080"
    depends_on:
      - nginx_2
      - redis 
    environment:
      FILE_SERVER_HOST: http://nginx_2:8000
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.25"
      replicas: 5
    
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - middleware

  # LOAD TESTER:
  # This container is for convenience and does not count against your resource cap.
  # Comment this out if you want to manually run load tests from the `load_test` directory.
  go_load_tester:
    container_name: load-tester
    build:
      context: go_load_test/
    environment:
      - FILE_SERVER_HOST=nginx            # Point this to your application middleware
      - FILE_SERVER_PORT=80                   # Point this to your application middleware (port will change)
      - FILE_SERVER_PROTO=http                  # Point this to your application middleware
      - FILE_SERVER_PATH_PREFIX=api/fileserver
      - REQUESTS_PER_SECOND=1                   # Base requests/sec the load test will begin on.
      - SEED_GROWTH_AMOUNT=1                    # Every second, this many more requests will be scheduled
      - ENABLE_REQUEST_RAMP=true                # If true, every 1 minute, your seed growth rate doubles
      - ENABLE_FILE_RAMP=true                   # If true, every 20 seconds the max possible file size written doubles
      - MAX_FILE_COUNT=3000                     # Recommend 2-5x total REQUESTS_PER_SECOND (consider seed in this calculation)
      - MAX_FILE_SIZE=1024                      # 1KB, but could be set to ANYTHING in live tests
      - TERM=xterm-256color
    volumes:
      - ./.fileserver/data:/tmp/                # Error logs are written to this data dir under load_test.log
    depends_on:
      - nginx

#  python_load_tester:
#    container_name: load-tester
#    build:
#      context: python_load_test/
#    environment:
#      - FILE_SERVER_ADDR=http://file_server:1234  # Point this to your application middleware (port will change)
#      - REQUESTS_PER_SECOND=500
#      - MAX_FILE_COUNT=3000                       # Recommend 2-5x REQUESTS_PER_SECOND
#      - MAX_FILE_SIZE=1024                        # 1KB, but could be set to ANYTHING in live tests
#      - TERM=xterm-256color
#    volumes:
#      - ./.fileserver/data:/tmp/                  # Error logs are written to this data dir under load_test.log
#    depends_on:
#      - file_server